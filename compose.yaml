version: '3.8'
services:

  reverse-proxy:
    image: haproxy
    restart: always
    networks:
        backend:
          ipv4_address: 172.20.0.4
    ports:
    - "127.0.0.1:8080:8080"
    volumes:
    - ./haproxy/reverse/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:rw 

  ingress-proxy:
    image: nginx:latest
    restart: always
    network_mode: host
    volumes:
    - ./nginx/ingress/default.conf:/etc/nginx/conf.d/default.conf:rw
    - ./nginx/ingress/nginx.conf:/etc/nginx/nginx.conf:rw

  web:
    build:
      context: .
      dockerfile: Dockerfile.python
    depends_on:
      - "db"
    ports:
      - "80:80"
    restart: always
    env_file:
    - ./.env
    environment:
      - DB_HOST=db
      - DB_USER=test_db
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=test_db
    networks:
        backend:
          ipv4_address: 172.20.0.5
  
  db:
    image: mysql:8
    command: "--default-authentication-plugin=mysql_native_password"
    volumes:
      - ./db_data:/var/lib/mysql
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
        reservations:
          memory: 256M
    env_file:
    - ./.env
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=test_db
      - MYSQL_USER=test_db
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_HOST="%"
    networks:
        backend:
          ipv4_address: 172.20.0.10

networks:
  backend:
    driver: bridge
    ipam:
     config:
       - subnet: 172.20.0.0/24
       



